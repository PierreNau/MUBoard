<?php
/**
 * MUBoard.
 *
 * @copyright Michael Ueberschaer
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License
 * @package MUBoard
 * @author Michael Ueberschaer <kontakt@webdesign-in-bremen.com>.
 * @link http://www.webdesign-in-bremen.com
 * @link http://zikula.org
 * @version Generated by ModuleStudio 0.5.4 (http://modulestudio.de) at Mon Jun 18 14:46:37 CEST 2012.
 */

/**
 * This handler class handles the page events of the Form called by the MUBoard_user_edit() function.
 * It aims on the posting object type.
 */
class MUBoard_Form_Handler_User_Posting_Edit extends MUBoard_Form_Handler_User_Posting_Base_Edit
{
	/**
	 * Initialize form handler.
	 *
	 * This method takes care of all necessary initialisation of our data and form states.
	 *
	 * @return boolean False in case of initialization errors, otherwise true.
	 */
	public function initialize(Zikula_Form_View $view)
	{
		parent::initialize($view);
		 
		// we get form for edit form to create a new issue
		$forum = $this->request->query->filter('forum', 0, FILTER_SANITIZE_NUMBER_INT);
		// we get forumid for edit form to answer to an issue
		$parentid = $this->request->query->filter('id', 0, FILTER_SANITIZE_NUMBER_INT);

		if ($parentid > 0) {
		// build posting repository
		$repository = MUBoard_Util_Model::getPostingRepository();

		$entity = $repository->selectById($parentid);
		$forumOfEntity = $entity->getForum();
		$forumid = $forumOfEntity['id'];
		}
		else {
			$forumid = 0;
		}

		// set mode to create
		$this->mode = 'create';
		 
		// get modvars
		$uploadImages = ModUtil::getVar('MUBoard', 'uploadImages');
		$uploadFiles = ModUtil::getVar('MUBoard', 'uploadFiles');
		$numberImages = ModUtil::getVar('MUBoard', 'numberImages');
		$numberFiles = ModUtil::getVar('MUBoard', 'numberFiles');
		 
		// we assign to template
		$this->view->assign('uploadImages', $uploadImages)
		->assign('uploadFiles', $uploadFiles)
		->assign('numberImages', $numberImages)
		->assign('numberFiles', $numberFiles)
		->assign('mode', $this->mode)
		->assign('forum', $forum)
		->assign('forumid', $forumid);

		// everything okay, no initialization errors occured
		return true;

	}
	
    /**
     * Get the default redirect url. Required if no returnTo parameter has been supplied.
     * This method is called in handleCommand so we know which command has been performed.
     */
    protected function getDefaultReturnUrl($args, $obj)
    {
    	$parentid = $this->request->getPost()->filter('muboardPosting_ParentItemList', 0, FILTER_SANITIZE_NUMBER_INT);
    	
        // redirect to the list of postings
        $viewArgs = array('ot' => $this->objectType);
        $url = ModUtil::url($this->name, 'user', 'view', $viewArgs);

        if ($args['commandName'] != 'delete' && !($this->mode == 'create' && $args['commandName'] == 'cancel')) {
            // redirect to the detail page of treated posting
            $url = ModUtil::url($this->name, 'user', 'display', array('ot' => 'posting', 'id' => $parentid));
        }
        return $url;
    }
}
